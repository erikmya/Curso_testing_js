------------------------------------------------------------------------------------------------------------------------
Clase 1 ¿Qué es el testing?

En el mundo actual las tecnologias con las que vivimos necesitan codigo, esto ha hecho que el desarrollo de software se haya vuelto industrial, donde contamos con procesos y herramientas, como el testing, que nos permiten entregar mas rapido proyectos de calidad a nuestros clientes reduciendo el riesgo de errores en produccion.

¿Por que hacer testing?
Normalmente hay cuatro fases en el desarrollo de software para crear un producto:

Diseño ⇒ Desarrollo ⇒ Pruebas ⇒ Produccion

En estas fases, detectar un error se vuelve cada vez mas costoso. Ahi es donde hacemos tecnicas para prevenir estas situaciones. El testing es la manera en la que nosotros gestionamos el riesgo y tratamos de evitar, en la medida de lo posible, los errores en el sistema.

Gestionar riesgos como Google
Analisis de codigo estatico: Mientras desarrollamos vamos viendo nuestros resultados.
Pruebas unitarias: Nos aseguramos que el codigo funciona como queremos.
Pruebas de integracion: Verificar que varios elementos funcionan bien trabajando juntos.
Revision de codigo: Equipo o persona encargada de revisar el codigo de las demas personas.
QA: Equipos de creacion de pruebas automaticas o manuales.

------------------------------------------------------------------------------------------------------------------------

Clase 2 

La pirámide clásica del testing: (de menos a más costoso y tendría que haber más pruebas de las primeras que de las últimas)

unit tests
integration tests
end to end tests (e2e)
ui test: emulan el dispositivo físico
En javascript se recomienda en vez la pirámide el trofeo de tests:

static tests: el tronco (el segundo mayor número de pruebas)
unit tests: mismo num. de pruebas que e2e y menos que static e integration
integration tests: el mayor número de pruebas debe ser aquí
e2e tests: mismo tamaño que unit tests y menos que static e integration

------------------------------------------------------------------------------------------------------------------------



